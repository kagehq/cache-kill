name: CI

permissions:
  contents: read

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache Rust build
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test --verbose

      - name: Run clippy
        run: cargo clippy

      - name: Check formatting
        run: cargo fmt -- --check

  build-check:
    name: Build Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache Rust build
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release

      - name: Test binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          ./target/release/cachekill --version
          ./target/release/mcp --version

      - name: Test binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          ./target/release/cachekill.exe --version
          ./target/release/mcp.exe --version
